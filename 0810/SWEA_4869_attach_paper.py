T = int(input())

for case in range(1, T + 1):
    N = int(input())

    # N // 10이 홀수일 때
    # 10*20 막대기가 처음에 세로로 모두 들어갈 때부터 2개씩 정사각형으로 바뀌는 것으로 거꾸로 센다.
    # 20*20가 하나씩 늘어나는 만큼 10*20의 막대기는 2개씩 줄어들고
    # 경우의 수는 전체 사각형의 개수에서 정사각형이 들어가는 경우의 수를 세는 것이므로
    # (10*20의 수 + 20*20의 수) C (20*20의 수)
    # 또 마지막으로 20 *20이 그대로 있거나 가로로 두개로 나뉘는 경우를 생각해줘야 하므로
    # 2 ** (20*20의 수)를 곱해준다.
    # 20*20 이 1개부터 시작(어차피 모두 세로인 경우는 1이므로 미리 result에 더해준다.)
    result = 1
    # 20*20의 개수만큼 돌리면서 계산
    for twtw in range(1, N // 20 + 1):
        mul = 1
        # 조합 식
        for i in range(1, twtw + 1):
            mul *= ((((N // 10) - (2 * twtw)) + twtw) - (i - 1))
        for i in range(1, twtw + 1):
            mul /= i
        # 2개의 경우의 수 20*20의 수만큼 만들어주기
        result += int(mul) * (2 ** twtw)

    print(f'#{case} {result}')

    # 아니 진짜 어이없는게 이거 설마 파이썬이라서 나눗셈 계산을 했을 때 소수로 돼서
    # 계산이 이상하게 되는 것 같아서 설마설마 해서
    # 위에처럼 다시 바꾸어 봤는데 바꾸니까 되네 진짜 너무 화난다 와 와와 와
    # 이거 무조건 됐던건데 파이썬 연산 문제때문에 1시간 넘게 고민한게 이게 말이 되나
    # 와 진짜 와 와 와 와!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    # result = 1
    # for twtw in range(1, N // 20 + 1):
    #     mul = 1
    #     for i in range(1, twtw + 1):
    #         mul *= ((((N // 10) - (2 * twtw)) + twtw) - (i - 1)) / i
    #     result += int(mul) * (2 ** twtw)
    #
    # print(f'#{case} {result}')

